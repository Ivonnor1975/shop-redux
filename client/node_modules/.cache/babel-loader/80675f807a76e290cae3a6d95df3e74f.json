{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\shop-redux\\\\client\\\\src\\\\components\\\\ProductList\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction ProductList() {\n  const state = useSelector(state => {\n    return state;\n  });\n  const dispatch = useDispatch();\n  const {\n    currentCategory\n  } = state;\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS); //const products = data?.products || [];\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n      data.products.forEach(product => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then(products => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Our Products:\"), state.products.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, filterProducts().map(product => /*#__PURE__*/React.createElement(ProductItem, {\n    key: product._id,\n    _id: product._id,\n    image: product.image,\n    name: product.name,\n    price: product.price,\n    quantity: product.quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"You haven't added any products yet!\"), loading ? /*#__PURE__*/React.createElement(\"img\", {\n    src: spinner,\n    alt: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 18\n    }\n  }) : null);\n}\n\nexport default ProductList;","map":{"version":3,"sources":["E:/Projects/shop-redux/client/src/components/ProductList/index.js"],"names":["React","useEffect","ProductItem","UPDATE_PRODUCTS","useQuery","QUERY_PRODUCTS","idbPromise","spinner","useDispatch","useSelector","ProductList","state","dispatch","currentCategory","loading","data","type","products","forEach","product","then","filterProducts","filter","category","_id","length","map","image","name","price","quantity"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction ProductList() {\n  const state = useSelector((state) => {\n    return state\n  });\n  const dispatch = useDispatch();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n  \n  //const products = data?.products || [];\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n"]},"metadata":{},"sourceType":"module"}