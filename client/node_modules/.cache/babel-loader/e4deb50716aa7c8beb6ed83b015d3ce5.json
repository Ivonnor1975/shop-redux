{"ast":null,"code":"import React,{useEffect}from'react';import{useQuery}from'@apollo/client';import{UPDATE_CATEGORIES,UPDATE_CURRENT_CATEGORY}from'../../utils/actions';import{QUERY_CATEGORIES}from'../../utils/queries';import{idbPromise}from'../../utils/helpers';import{useDispatch,useSelector}from'react-redux';function CategoryMenu(){var state=useSelector(function(state){return state;});var dispatch=useDispatch();var categories=state.categories;var _useQuery=useQuery(QUERY_CATEGORIES),loading=_useQuery.loading,categoryData=_useQuery.data;useEffect(function(){if(categoryData){dispatch({type:UPDATE_CATEGORIES,categories:categoryData.categories});categoryData.categories.forEach(function(category){idbPromise('categories','put',category);});}else if(!loading){idbPromise('categories','get').then(function(categories){dispatch({type:UPDATE_CATEGORIES,categories:categories});});}},[categoryData,loading,dispatch]);var handleClick=function handleClick(id){dispatch({type:UPDATE_CURRENT_CATEGORY,currentCategory:id});};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Choose a Category:\"),categories.map(function(item){return/*#__PURE__*/React.createElement(\"button\",{key:item._id,onClick:function onClick(){handleClick(item._id);}},item.name);}));}export default CategoryMenu;","map":{"version":3,"sources":["E:/Projects/shop-redux/client/src/components/CategoryMenu/index.js"],"names":["React","useEffect","useQuery","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","QUERY_CATEGORIES","idbPromise","useDispatch","useSelector","CategoryMenu","state","dispatch","categories","loading","categoryData","data","type","forEach","category","then","handleClick","id","currentCategory","map","item","_id","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,OACEC,iBADF,CAEEC,uBAFF,KAGO,qBAHP,CAIA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,OAASC,UAAT,KAA2B,qBAA3B,CAEA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAGA,QAASC,CAAAA,YAAT,EAAwB,CAEtB,GAAMC,CAAAA,KAAK,CAAGF,WAAW,CAAC,SAACE,KAAD,CAAW,CACnC,MAAOA,CAAAA,KAAP,CACD,CAFwB,CAAzB,CAIA,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CAEA,GAAQK,CAAAA,UAAR,CAAuBF,KAAvB,CAAQE,UAAR,CAEA,cAAwCV,QAAQ,CAACG,gBAAD,CAAhD,CAAQQ,OAAR,WAAQA,OAAR,CAAuBC,YAAvB,WAAiBC,IAAjB,CAEAd,SAAS,CAAC,UAAM,CACd,GAAIa,YAAJ,CAAkB,CAChBH,QAAQ,CAAC,CACPK,IAAI,CAAEb,iBADC,CAEPS,UAAU,CAAEE,YAAY,CAACF,UAFlB,CAAD,CAAR,CAIAE,YAAY,CAACF,UAAb,CAAwBK,OAAxB,CAAgC,SAACC,QAAD,CAAc,CAC5CZ,UAAU,CAAC,YAAD,CAAe,KAAf,CAAsBY,QAAtB,CAAV,CACD,CAFD,EAGD,CARD,IAQO,IAAI,CAACL,OAAL,CAAc,CACnBP,UAAU,CAAC,YAAD,CAAe,KAAf,CAAV,CAAgCa,IAAhC,CAAqC,SAACP,UAAD,CAAgB,CACnDD,QAAQ,CAAC,CACPK,IAAI,CAAEb,iBADC,CAEPS,UAAU,CAAEA,UAFL,CAAD,CAAR,CAID,CALD,EAMD,CACF,CAjBQ,CAiBN,CAACE,YAAD,CAAeD,OAAf,CAAwBF,QAAxB,CAjBM,CAAT,CAmBA,GAAMS,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,EAAD,CAAQ,CAC1BV,QAAQ,CAAC,CACPK,IAAI,CAAEZ,uBADC,CAEPkB,eAAe,CAAED,EAFV,CAAD,CAAR,CAID,CALD,CAOA,mBACE,4CACE,mDADF,CAEGT,UAAU,CAACW,GAAX,CAAe,SAACC,IAAD,qBACd,8BACE,GAAG,CAAEA,IAAI,CAACC,GADZ,CAEE,OAAO,CAAE,kBAAM,CACbL,WAAW,CAACI,IAAI,CAACC,GAAN,CAAX,CACD,CAJH,EAMGD,IAAI,CAACE,IANR,CADc,EAAf,CAFH,CADF,CAeD,CAED,cAAejB,CAAAA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nfunction CategoryMenu() {\n\n  const state = useSelector((state) => {\n    return state\n  });\n\n  const dispatch = useDispatch();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"]},"metadata":{},"sourceType":"module"}